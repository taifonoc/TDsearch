<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wIBAv8CAQL/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AgEC/wIBAv8BAAH/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wIBAv8AAAD/AAAA/wAAAP8FAgX/Gwwb/zAV
        L/8/HD//RR9E/0AdQP8xFjH/Hg4e/wgDCP8AAAD/AAAA/wAAAP8CAQL/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8CAQL/AAAA/wEAAf8yFjH/ai9q/5JB
        kf+lSqT/rU2s/7BOr/+wT6//sE6v/61NrP+nSqb/lUKU/3Ayb/84GTj/BAIE/wAAAP8BAAH/AQAB/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAEA/wAAAP82GDX/hzyG/6xN
        q/+vTq7/qEun/6RJo/+iSKH/oEef/59JoP+gR5//okih/6RJo/+oS6f/rk2t/65Nrf+OP43/Pxw//wAA
        AP8AAAD/AQAB/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AQEB/wEBAf8HAAr/bzFu/61N
        rP+rTKr/okih/6JIof+jSaL/pEmj/6NJov+qTKr/rkWk/6pMqv+jSaL/pEmj/6NJov+iSKH/okih/6lL
        qP+vTq7/eDV3/xIIEv8CAgL/AgEC/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/zcu
        KP+MPov/qUuo/6FIoP+kSaP/pEmj/6RJo/+iSKH/rEyr/3o0d/82P13/ejR4/6xMq/+iSKH/pEmj/6RJ
        o/+kSaP/o0ii/6BHn/+yT7H/iDyH/wAAAf8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8BAQH/AQEB/wIC
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>